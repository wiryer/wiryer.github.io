<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>It&#39;s a Wonderful Life</title>
    <link>http://wiryer.github.io/</link>
    <description>Recent content on It&#39;s a Wonderful Life</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language><atom:link href="http://wiryer.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>1. 학습 순서</title>
      <link>http://wiryer.github.io/study/</link>
      <pubDate>Thu, 29 Apr 2021 23:27:29 +0900</pubDate>
      
      <guid>http://wiryer.github.io/study/</guid>
      <description>CI/CD
   저는 Onpremise 환경과, Public Cloud에서 몇차례 CI/CD 구축한 경험
  이 학습의 목적을 CI/CD 구축 경험이 없는 분들에게 어떤 구축 절차, 어떤 이슈 공유
  현장경험을 공유하는 시간
  가장 근래에, &amp;ldquo;LG U+ 홈플렛폼&amp;rdquo; 프로젝트에서 CI/CD 구축한 경험을 설명
  CI/CD 도구 선정, 설치와 연동, 프로젝트 생성과 테스트 순으로 진행하며, 이슈나 경험을
  Gitlab 사이트에 시스템 별/ 상황별 설치방법은 자세히 나와 있으니(https://about.</description>
    </item>
    
    <item>
      <title>1. 학습 순서</title>
      <link>http://wiryer.github.io/study2/</link>
      <pubDate>Thu, 29 Apr 2021 23:27:29 +0900</pubDate>
      
      <guid>http://wiryer.github.io/study2/</guid>
      <description>CI/CD
   전 OnPremise 환경과, Public Cloud에서 몇차례 CI/CD 구축한 경험이 있고, 그 덕분인지&amp;hellip; 이렇게 CI/CD 학습의 리딩 역할을 주셨네요.. ㅠㅠ
  학습의 목적을 CI/CD 구축 경험이 없는 분들에게 현장에서는 어떤 절차로 진행되고, 어떤 이슈들이 생길 수 있는 지..
  경험을 공유하는 시간으로 전 이해하고 있습니다.
  오늘 제가 진행할 내용은 가장 근래에, &amp;ldquo;LG U+ 홈플렛폼&amp;rdquo; 프로젝트에서 CI/CD 구축한 경험이 있는데,
  여기서 전 gitlab 과 gitlab-runner 를 연동해서 CICD, 연동에 대한 포괄적인 설명과 샘플 프로젝트 생성을 통해 테스트 진행과정을 설명하도록 하겠습니다.</description>
    </item>
    
    <item>
      <title>2. 배포절차</title>
      <link>http://wiryer.github.io/cicd/</link>
      <pubDate>Thu, 29 Apr 2021 22:13:21 +0900</pubDate>
      
      <guid>http://wiryer.github.io/cicd/</guid>
      <description>1. 프로젝트 생성 1.1 개발자 등록
 Gitlab 시스템에 개발자를 등록한다. 등록 방법은 SWA가 제시하는 방법에 따른다. SWA(또는 Admin)는 프로젝트에 대한 개발자 권한을 설정하여 제공한다.   1.2 프로젝트 생성
 최초 프로젝트 생성은 SWA 등 maintainer 권한을 가진 사용자가 생성한다.   Figure-1. 프로젝트 생성     프로젝트를 생성 후, 최초 소스를 Master Origin에 PUSH 한다.  cd example git init git remote add origin http://gitlab.dev.lghomin.com/sample/example.git git add .</description>
    </item>
    
    <item>
      <title>About</title>
      <link>http://wiryer.github.io/about/</link>
      <pubDate>Thu, 29 Apr 2021 22:02:13 +0900</pubDate>
      
      <guid>http://wiryer.github.io/about/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>http://wiryer.github.io/cicddoc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://wiryer.github.io/cicddoc/</guid>
      <description>목차  솔루션선정 [Gitlab 설치] [Gitlab-Runner 연동]    1. 솔루션선정  형상관리서버  Gitlab 선정: Git 기반의 자체구축관리의 무료 버전  CI 도구선정   Gitlab-Runner선정의 이유(Jenkins를 선정하지 않은 이유)
A. 단일어플리케이션 이점: 동일 호스트를 사용하면서 가시성이 높음
 전체 개발 단계에서 일관된 UI제공 여러 어플리케이션 로그인 사용불편제거 설치 및 백업 등 유지관리가 용이함.\  B. Plugin 등이 전혀 필요없음
 Jenkins의 Plugin 충돌 경험  C. Code Review, Merge Request 등 협업 기능을 지원한다.</description>
    </item>
    
  </channel>
</rss>
